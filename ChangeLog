1999-03-08    <lfb@scriptics.com>

	* win/tclWin32Dll.c: Removed Dll instance from thread-local
	storage.

	

1999-02-25    <redman@scriptics.com>

	* win/makefile.vc: Added tclWinConsole.c and tclWinSerial.c
	
	* win/tclWinConsole.c: New code to properly deal with fileevents
	and nonblocking mode on consoles.
	
	* win/tclWinSerial.c: New code to properly deal with fileevents
	and nonblocking mode on serial ports.

	* win/tclWinPipe.c: 
	* win/tclWinPort.h: Exported functions to allow creation of pipe
	channels from tclWinChan.c

	* win/tclWinChan.c: Check the type of a channel, including for the
	standard (stdin/stdout/stderr), and use the correct channel type
	to create the channel (file, serial, console, or pipe).

1999-02-11    <stanton@GASPODE>

	* README: 
	* generic/tcl.h: 
	* win/README.binary: 
	* win/README: 
	* unix/configure.in: 
	* mac/README: Updated version numbers to 8.1b2.

1999-02-10    <stanton@GASPODE>

	* library/auto.tcl: Fixed auto_mkindex so it handles .tbc files.
	Did some general cleanup to handle bad eval statements that didn't
	use "list".

	* unix/mkLinks:
	* doc/SetVar.3:
	* generic/tcl.h:
	* generic/tclVar.c: Restored Tcl_ObjGetVar2 and Tcl_ObjSetVar2
	from 8.0. Renamed Tcl_Get/SetObjVar2 to Tcl_GetVar2Ex and
	Tcl_SetVar2Ex.

1999-02-10    <stanton@GASPODE>

	INTEGRATED PATCHES FROM 8.0.5b2: 

	* test/winPipe.test: Changed to remove echoArgs.tcl temporary file
	when done.
	
	* tests/cmdAH.test:
	* generic/tclFileName.c (TclGetExtension): Changed behavior so the
	split happens at the last period in the name instead of the first
	period of the last run of periods.  So, "foo..o" is split into
	"foo." and ".o" now. [Bug: 1126]
	
	* win/makefile.vc: Added better support for paths with spaces in
	the name. Added .lib and support .dlls to the install-binaries
	target.  Added generate of a pkgIndex.tcl script to the
	install-libraries target.

	* win/tclAppInit.c: 
	* unix/tclAppInit.c: 
	* mac/tclMacAppInit.c: 
	* generic/tclTest.c: Changed some EXTERN declarations to extern
	since they are not defining exported interfaces.  This avoids
	generating useless declspec() attributes and makes the windows
	makefile simpler.

	* generic/tcl.h: Moved Tcl_AppInit declaration to end and cleared
	out TCL_STORAGE_CLASS so it is not declared with a declspec().

	* tests/interp.test:
	* generic/tclInterp.c (DeleteAlias): Changed to use
	Tcl_DeleteCommandFromToken so we handle renames properly. This
	avoids senseless panic. [Bug: 736]

	* unix/tclUnixChan.c: 
	* win/tclWinSock.c: 
	* doc/socket.n: Applied Gordon Chaffee's patch to handle failures
	during asynchronous socket connection operations.  This adds a new
	"-error" fconfgure option to socket channels. [Bug: 893]

	* generic/tclProc.c:
	* generic/tclNamesp.c:
	* generic/tclInt.h: 
	* generic/tclCmdIL.c: 
	* generic/tclBasic.c: 
	* generic/tclVar.c: Applied patch from Viktor Dukhovni to
	rationalize TCL_LEAVE_ERR_MSG behavior when creating variables.
	
	* generic/tclVar.c: Fixed bug in namespace tail computation.
	Fixed bug where upvar could resurrect a namespace variable whose
	namespace had been deleted.

	* generic/tclCompile.c (TclCompileExprCmd): Eliminated yet another
	bogus optimization in expression compilation.

	* unix/configure.in: Added branch for BSD/OS-4* to shared library
	case statement. [Bug: 975]
	Fixed to correctly handle IRIX 6.5 n32 library support. [Bug: 1117]
	
	* win/winDumpExts.c: Patched to be pickier about stripping
	@'s. [Bug: 920]

	* library/http2.0/http.tcl: Added catch around eof test in
	CopyDone since the user may have already called http::reset.
	[Bug: 1108] 

	* unix/configure.in: Changed Linux and IRIX to set SHLIB_LIBS to
	LIBS so shared libraries are linked with the system
	libraries. [Bug: 1018]

	* generic/tclCompile.c (CompileExprWord): Fixed exception stack
	overflow bug caused by missing statement. [Bug: 928]

	* generic/tclIOCmd.c: 
	* generic/tclBasic.c: Objectified the "open" command. [Bug: 1113] 

	* generic/tclPosixStr.c (Tcl_ErrnoId, Tcl_ErrnoMsg): When using
	egcs, ENOTSUP and EOPNOTSUPP are the same, so now we handle that
	case. [Bug: 1137]

	* library/init.tcl: Various small changes requested by Jan Nijtmans.
	- If the variable $tcl_library contains the empty string, this
	empty string will be put in $auto_path. This is not useful at all,
	it only slows down later package processing.
	- If the variable tcl_pkgPath is not set, the "unset __dir"
	fails. Thich makes init.tcl totally unusable. Better put a "catch"
	around it. 
	- In the function tcl_findLibraries, the "string match" function
	only works correctly if $tcl_patchLevel is in one of the forms
	"?.?a?", "?.?b?" or "?.?.?". Could a "regexp" be used instead,
	then it allows anything to be appended to the patchLevel
	string. And it is more efficient.
	- The tclPkgSetup function assumes that if $type != "load" then
	the type must be "source". This needn't be true. Some users want
	to add their own setup types.
	[RFE: 1138] [Bug: 978]

	* win/tclWinReg.c: 
	* doc/registry.n: Added support for HKEY_PERFORMANCE_DATA and
	HKEY_DYN_DATA keys. [Bug: 1109]

	* win/tclWinInit.c (TclPlatformInit): Added code to ensure
	tcl_pkgPath is set to "" when no registry entry is found. [Bug: 978]

1999-02-01    <stanton@GASPODE>

	* generic/tclBasic.c:
	* generic/tclCmdAH.c:
	* generic/tclCmdIL.c:
	* generic/tclCmdMZ.c:
	* generic/tclExecute.c:
	* generic/tclHistory.c:
	* generic/tclIO.c:
	* generic/tclIOUtil.c:
	* generic/tclInterp.c:
	* generic/tclMain.c:
	* generic/tclNamesp.c:
	* generic/tclParse.c:
	* generic/tclProc.c:
	* generic/tclTest.c:
	* generic/tclTimer.c:
	* generic/tcl.h: Made eval interfaces compatible with 8.0 by
	renaming Tcl_EvalObj to Tcl_EvalObjEx, renaming Tcl_Eval2 to
	Tcl_EvalEx and restoring Tcl_EvalObj and Tcl_GlobalEvalObj
	interfaces so they match Tcl 8.0.

1999-01-28    <stanton@GASPODE>

	* Merged Tcl 8.0.5b1 changes.
	
	* generic/tclUtil.c (Tcl_DStringSetLength): Changed so the buffer
	overallocates in a manner similar to Tcl_DStringAppend.  This
	should improve performance for TclUniCharToUtfDString.

1998-12-11    === Tcl 8.1b1 Release ===
	
1998-12-10    <stanton@GASPODE>

	* Fixed lots of files that used TCL_THREAD instead of TCL_THREADS.
	
	* generic/tclEncoding.c (Tcl_FreeEncoding): Moved most of the code
	into a static FreeEncoding routine that does not grab the
	encodingMutex to avoid deadlocks/races when called from other
	routines that already have the mutex.

1998-12-09    <stanton@GASPODE>

	* library/msgcat1.0/msgcat.tcl: Fixed bad export list, fixed so
	all locale strings are converted to lower case, including file
	names.

	* generic/regcomp.c (makescan): Fixed bug in longest match case
	that caused anchored patterns to fail. [Bug: 897]

1998-12-08    <stanton@GASPODE>

	* library/msgcat1.0/msgcat.tcl: changed mc to invoke mcunknown in
	the calling context, changed locale lookups to be case insensitive

1998-12-07    <stanton@GASPODE>

	* generic/tclAlloc.c (TclpRealloc): Fixed a memory allocation bug
	where big blocks that were reallocated into a different heap
	location were not being placed into the bigBlocks list. [Bug: 933]

	* tests/msgcat.test: Added message catalog test suite.

	* library/msgcat1.0/msgcat.tcl: minor bug fixes, integrated latest
	changes from Mark Harrison.

1998-12-04    <stanton@GASPODE>

	* library/msgcat1.0/msgcat.tcl: Changed code to conform to Tcl
	coding standards.  Changed to use file join for portability.

	* library/msgcat1.0: Added initial implementaion of Tcl message
	catalog package contributed by Mark Harrison.

1998-12-03    <stanton@GASPODE>

	* win/tclWinPipe.c (BuildCommandLine): Fixed bug that kept
	arguments containing spaces from being properly quoted.

	* tests/defs: Changed so auto_path is set to only contain the Tcl
	library directory.  This keeps the tests from accidentally picking
	up stuff in installed packages. 

	* generic/tclUtil.c (Tcl_StringMatch): Changed to match 8.0
	behavior in corner case where there is no closing bracket.

1998-12-02    <stanton@GASPODE>

	* win/tclWinPipe.c (TclpCreateCommandChannel): Changed
	reader/writer threads to have THREAD_PRIORITY_HIGHEST so they will
	have a chance to run whenever there is something to do.

	* generic/tclIO.c (WriteBytes, WriteChars): Fixed so extraneous
	flushes do not happen in line mode.
	(TranslateOutputEOL): Made translation more efficient in line mode
	and fixed a buffer overflow bug in CRLF translation. [Bug: 887]

1998-12-02    <welch@SAGE>

	* Updated patchlevel to 8.1b1

1998-12-02    <stanton@GASPODE>

	* generic/regc_color.c (subcolor): Added check for error case to
	avoid an out of bounds array reference.

	* generic/tclCmdAH.c (Tcl_EncodingObjCmd): Changed to avoid using
	Tcl_DStringResult because it is not binary clean.

	* generic/tclParse.c (Tcl_ParseCommand): Fixed bug in comment
	parsing where a trailing comment looked like an incomplete
	command. 

1998-12-02    <welch@SAGE>

	* Merged changes from 8.0.4, especially the new pkg_mkIndex

1998-12-01    <stanton@GASPODE>

	* generic/tclIO.c (Tcl_ReadChars): Added a call to UpdateInterest
	so we don't block when there is data sitting in the buffers.

	* generic/tclTest.c (TestevalobjvObjCmd): Updated for EvalObjv
	change.

	* tests/parse.test: Updated tests for EvalObjv change.

	* generic/tclParse.c (EvalObjv, Tcl_EvalObjv): Changed
	Tcl_EvalObjv interface to remove string and length arguments,
	preserved original interface as EvalObjv for internal use.

	* generic/tcl.h: Changed Tcl_EvalObjv interface to remove string
	and length arguments.

	* doc/Eval.3: Updated documentation for Tcl_EvalObjv to remove
	string and length arguments.

	* generic/tclCompCmds.c (TclCompileForeachCmd): Fixed code that
	corrupted the exceptDepth value in the compile environment when
	foreach failed to compile inline. [Bug: 884]

	* library/encoding/euc-kr.enc: 
	* library/encoding/ksc5601.enc: 
	* tools/encoding/ksc5601.txt: 
	* unix/tclUnixInit.c: Added support for Korean EUC. 

	* win/tclWinChan.c (TclpGetDefaultStdChannel): added check for a
	failure during Tcl_MakeFileChannel.

1998-11-30    <stanton@GASPODE>

	* unix/tclUnixNotfy.c (Tcl_WaitForEvent): Fixed hang that occurs
	when trying to close a pipe that is currently being waited on by
	the notifier thread. [Bug: 607]

	* unix/tclUnixFCmd.c (GetPermissionsAttribute): Increase size of
	returnString buffer to avoid overflow. [Bug: 584]

	* generic/tclThreadTest.c (TclThreadSend): Fixed memory leak due
	to use of TCL_VOLATILE instead of TCL_DYNAMIC.

	* generic/tclThread.c (TclRememberSyncObject): Fixed memory leak
	caused by failure to reuse condition variables.

	* unix/tclUnixNotfy.c: 	(Tcl_AlertNotifier, Tcl_WaitForEvent,
	NotifierThreadProc, Tcl_InitNotifier): Fixed race condition caused
	by incorrect use of condition variables when sending messages
	between threads.. [Bug: 607]

	* generic/tclTestObj.c (TeststringobjCmd): MAX_STRINGS was off by one
	so the strings array was too small.

	* generic/tclCkalloc.c (Tcl_DbCkfree): Moved mutex lock so
	ValidateMemory is done inside the mutex to avoid a race condition
	when validate_memory is enabled. [Bug: 880]

1998-11-23    <stanton@GASPODE>

	* regexec.c: more performance tuning from Henry Spencer.

1998-11-17    <stanton@GASPODE>

	* tclScan.c: moved "scan" implementation out of tclCmdMZ.c and
	added Unicode support.  This required a complete reimplementation
	of the command to avoid using scanf(), which isn't Unicode aware.
	Two new features were added in the process: %n to return the
	current number of characters consumed, and XPG3-style %n$ argument
	order specifiers similar to those provided by the "format"
	command. [Bug: 833]

	* tclAlloc.c: changed so allocated memory is always 8-byte aligned
	to improve memory performance and to ensure that it will work on
	systems that don't like accessing 4-byte aligned values
	(e.g. Solaris and HP-UX). [Bug: 834]

1998-11-06    <stanton@GASPODE>

	* tclVar.c (TclGetIndexedScalar): Fixed bug 796, var name was
	getting lost before being passed to CallTraces.

1998-10-21    <stanton@GASPODE>

	* added "encoding" command
	
	* Moved internal regexp declarations from tclInt.h to tclRegexp.h

	* integrated regexp updates from Henry Spencer

1998-10-15    <stanton@GASPODE>

	* tclUtf.c: added Unicode character table support

	* tclInt.h: added TclUniCharIsWordChar

	* tclCmdMZ.c (Tcl_StringObjCmd): added "totitle" subcommand,
	changed "wordend" and "wordstart" to properly handle Unicode word
	characters and connector punctuation

1998-10-05    <stanton@GASPODE>

	* auto.tcl, package.tcl: fixed SCCS strings

	* tclIndex: updated index to reflect 8.1 files

	* tclCompile.c (TclCompileScript): changed to avoid modifying the
	input string in place because name lookup operations could have
	arbitrary side effects

	* tclInterp.c: added guard against deleting current interpreter

	* tclMacFile.c, tclUnixFile.c, tclWinFile.c, tclFileName.c: added
	warnings around code that modifies strings in place

	* tclExecute.c: fixed off-by-one copying error, fixed merge bugs

	* tclEvent.c: changed so USE_TCLALLOC is tested for value instead
	of definition

	* tclCompCmds.c: replaced SCCS strings, added warnings around code
	that modifies strings in place

	* interp.test: added test for interp deleting itself

1998-09-30    <stanton@GASPODE>

	* makefile.vc: fixed so TCL_LIBRARY is set before running tcltest

	* tclWin32Dll.c: removed TclpFinalize, cleanup of merges

