RCS: @(#) $Id$

2009-09-26  Donal K. Fellows  <dkf@users.sf.net>

	* generic/itclBase.c, generic/itclBuiltin.c, generic/itclParse.c:
	[Bug 2821935]: Change method of quoting multiline strings to work
	around a limitation in the MSVC 6.0 compiler.

2008-02-02 Arnulf P. Wiedemann <wiede@users.sf.net>
        * generic/itcl.h configure.in:
	             bumped version to 4.0b3
2008-02-01 Arnulf P. Wiedemann <wiede@users.sf.net>
        * tests/widgetadaptor.test and tests/widgetclass.test:
	             removed package require Tk to avoid running the tests
		     always
2008-01-24 Arnulf P. Wiedemann <wiede@users.sf.net>
	* generic/itclBase.c:	added *Dict*Info functions to allow fully
	* generic/itclBuiltin.c:integration of itclWidget package.
	* generic/itclClass.c:  itclWidget package is no longer needed.
	* generic/itclCmd.c:	The *Dict*Info* function also allow in the
	* generic/itclObject.c: future to replace itclInfo.c by a scripted
	* generic/itclParse.c:  version written in tcl.
	* generic/itclInfo.c:   For replacing itclWidget package itclWidget.tcl
	* generic/itclMethod.c: has been filled with new procs, which are
	* library/itclWidget.tcl:called from the C parts, when needed.

	* generic/itclHelpers.c:here one can find all the *Dict*Info functions

	* library/ictlHullCmds.tcl:
				here are similar funtions to itclWidget.tcl for
				use by ::itcl::extendedclass

	* generic/itclUtil.c:	malloc.h include now bracketed with 
				#ifdef ITCL_PRESERVE_DEBUG as it is only used
				for debugging. I have to look for a solution
				using memory.h as a portable version, but
				for that I have to understand that first.
				With #ifdef ITCL_PRESERVE_DEBUG, the malloc
				and free calls can be used again, these are
				necessary, as im am checking stuff done by
				ckalloc and ckfree, so these cannot be used.
2009-01-15 David Gravereaux <davygrvy@pobox.com>
	* generic/itcl2TclOO.h:  More cleanups changing the last of the 
	* generic/itclClass.c:   'EXTERN' macros to just be 'extern' as we 
	* win/.cvsignore:        aren't importing the declaration, just  
	* win/itcl.rc:           sharing it internally.  This caused warnings 
	* win/makefile.vc:       on windows during the link stage as it was 
	* win/nmakehlp.c:        getting confused about 'why are you 
	* win/rules.vc:          importing an internal function?'
2009-01-15 David Gravereaux <davygrvy@pobox.com>
	* generic/itclMigrate2TclCore.h:    All build errors squashed
	* generic/itclStubLib.c:
	* generic/itclTclIntStubFcn.h:
	* win/makefile.vc:  
2009-01-14 David Gravereaux <davygrvy@pobox.com>
	* generic/itclBase.c:
	* generic/itclBuiltin.c:
	* generic/itclClass.c:
	* generic/itclCmd.c:
	* generic/itclEnsemble.c:
	* generic/itclHelpers.c:
	* generic/itclInfo.c:
	* generic/itclMethod.c:
	* generic/itclMigrate2TclCore.c:
	* generic/itclObject.c:
	* generic/itclParse.c:
	* generic/itclResolve.c
	* generic/itclStubs.c
	* generic/itclTclIntStubsFcn.c:
	* win/makefile.vc:
		Changes to allow compiling on windows with
		MSVC++.  Double declaration of internal 
		functions not yet repaired.  DOESN'T
		BUILD YET with makefile.vc.
2009-01-14 Daniel A. Steffen <das@users.sourceforge.net>
    * Makefile.in: fix itclConfig.sh install location to match TEA convention
    * aclocal.m4: match minimum autoconf requirement with TEA
    * configure: autoconf-2.59
    * generic/itclUtil.c: fix Mac OS X build failure (dkf) [Bug 2505545]
2008-12-11 Arnulf P. Wiedemann <wiede@users.sf.net>
    * itcl-ng first beta release 4.0b1
2008-12-06 Arnulf P. Wiedemann <wiede@users.sf.net>
    * built enhanced functions for chasing memory leaks in adding 
    * functionality to the functions available in Tcl core 
    * and fixed a lot of leaks of that class
2008-11-30 Arnulf P. Wiedemann <wiede@users.sf.net>
    * built functions for chasing memory leaks and fixed a lot of those
2008-11-16 Arnulf P. Wiedemann <wiede@users.sf.net>
    * second alpha release 4.0a1
2008-11-14 Arnulf P. Wiedemann <wiede@users.sf.net>
    * 207 tests for snit like functionality running
2008-10-19 Arnulf P. Wiedemann <wiede@users.sf.net>
    * the snit like commands are mostly implemented
    * starting with tests for snit like functionality
2008-10-18 Arnulf P. Wiedemann <wiede@users.sf.net>
    * first alpha release 4.0a0
2007-10-15 Arnulf P. Wiedemann <wiede@users.sf.net>
    * added the following commands:
    * ::itcl::extendedclass
    * ::itcl::adddelegatedoption
    * ::itcl::adddelegatedmethod
    * ::itcl::setComponent
2007-10-12 Arnulf P. Wiedemann <wiede@users.sf.net>
    * started to add commands in snit like class types:
    * option
    * typemethod
    * delegate option
    * delegate typemethod
    * delegate method
    * component
    * widgetclass
2007-09-29 Arnulf P. Wiedemann <wiede@users.sf.net>
    * started to add snit like commands and classtypes
    * these are ::itcl::type, ::itcl::widget, ::itcl::widgetadaptor
2007-09-29 Arnulf P. Wiedemann <wiede@users.sf.net>
    * new commands ::itcl::struct, ::itcl::nwidget ::itcl::addoption and
    * ::itcl::addcomponent
    * some rearraging of functions for options and delegation, so that
    * these can be used in the above commands without the need to load
    * the ItclWidget package
    * The above commands will be used for a prototype implementation
    * of NexTk (from George Peter Staplin) with Itcl using the megapkg
    * package of George Peter Staplin as a base
2007-09-29 Arnulf P. Wiedemann <wiede@users.sf.net>
    * fixed configuration files
    * new/modified code for ItclWidget package (missing code for specification)
    * added
2007-09-09 Arnulf P. Wiedemann <wiede@users.sf.net>
    * beautifying and fixes for stack backtrace handling
    * too many files to list here (nearly all)
2007-09-08 Arnulf P. Wiedemann <wiede@users.sf.net>
    * all new modules installed and added
This is the ChangeLog file for itcl-ng/itcl
it is here as Itcl and itcl-ng/itcl will be different modules in the future
