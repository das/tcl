# This file contains tests for the ::tcl::tm::* commands.
#
# Sourcing this file into Tcl runs the tests and generates output for
# errors.  No output means no errors were found.
#
# Copyright (c) 2004 by Donal K. Fellows.
# All rights reserved.
#
# RCS: @(#) $Id$

package require Tcl 8.5
if {"::tcltest" ni [namespace children]} {
    package require tcltest 2
    namespace import -force ::tcltest::*
}

test tm-1.1 {tm: path command exists} {
    catch { ::tcl::tm::path }
    info commands ::tcl::tm::path
} ::tcl::tm::path
test tm-1.2 {tm: path command syntax} -returnCodes error -body {
    ::tcl::tm::path foo
} -result {unknown or ambiguous subcommand "foo": must be add, list, or remove}
test tm-1.3 {tm: path command syntax} -returnCodes error -body {
    ::tcl::tm::path add
} -result "wrong # args: should be \"::tcl::tm::path add path ?path ...?\""
test tm-1.4 {tm: path command syntax} -returnCodes error -body {
    ::tcl::tm::path remove
} -result "wrong # args: should be \"::tcl::tm::path remove path ?path ...?\""
test tm-1.5 {tm: path command syntax} -returnCodes error -body {
    ::tcl::tm::path list foobar
} -result "wrong # args: should be \"::tcl::tm::path list\""

test tm-2.1 {tm: roots command exists} {
    catch { ::tcl::tm::roots }
    info commands ::tcl::tm::roots
} ::tcl::tm::roots
test tm-2.2 {tm: roots command syntax} -returnCodes error -body {
    ::tcl::tm::roots
} -result "wrong # args: should be \"::tcl::tm::roots paths\""
test tm-2.3 {tm: roots command syntax} -returnCodes error -body {
    ::tcl::tm::roots foo bar
} -result "wrong # args: should be \"::tcl::tm::roots paths\""

test tm-3.1 {tm: module path management} {
    # Andreas Kupries needs to write some tests here...
    error FIXME
} {}

::tcltest::cleanupTests
return

# Local Variables:
# mode: tcl
# End:
