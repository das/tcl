dnl	This file is an input file used by the GNU "autoconf" program to
dnl	generate the file "configure", which is run during Tcl installation
dnl	to configure the system for the local environment.
AC_INIT(../generic/tcl.h)
# RCS: @(#) $Id$

TCL_VERSION=8.1
TCL_MAJOR_VERSION=8
TCL_MINOR_VERSION=1
TCL_PATCH_LEVEL=.2
VERSION=${TCL_VERSION}

AC_PROG_MAKE_SET
AC_PROG_CC
AC_CYGWIN
AC_OBJEXT
AC_EXEEXT

# Set the default compiler switches based on the --enable-symbols option 

AC_ARG_ENABLE(symbols, [  --enable-symbols        build with debugging symbols],
    [tcl_ok=$enableval], [tcl_ok=no])
if test "$tcl_ok" = "yes"; then
    CFLAGS='${CFLAGS_DEBUG}'
    LD_FLAGS='${LDFLAGS_DEBUG}'
    TCL_DBGX=d
else
    CFLAGS='${CFLAGS_OPTIMIZE}'
    LD_FLAGS='${LDFLAGS_OPTIMIZE}'
    TCL_DBGX=""
fi

# Trick to replace DBGX with TCL_DBGX
DBGX='${TCL_DBGX}'
eval "TCL_LIB_FILE=${TCL_LIB_FILE}"

#--------------------------------------------------------------------
#	The statements below define a collection of symbols related to
#	building libtcl as a shared library instead of a static library.
#--------------------------------------------------------------------

AC_ARG_ENABLE(shared,
    [  --enable-shared         build libtcl as a shared library (on by default)],
    [tcl_ok=$enableval], [tcl_ok=yes])

# Check whether --enable-shared or --disable-shared was given.
if test "${enable_shared+set}" = set; then
  enableval="$enable_shared"
  tcl_ok=$enableval
else
  tcl_ok=yes
fi

if test "$tcl_ok" = "yes" ; then
    TCL_SHARED_BUILD=1
else
    TCL_SHARED_BUILD=0
    AC_DEFINE(STATIC_BUILD)
fi

EXTRA_CFLAGS=""
# set various compiler flags depending on whether we are using gcc or cl
if test "${GCC}" = "yes" ; then
    CFLAGS_DEBUG=-g
    CFLAGS_OPTIMIZE=-O
    CFLAGS_WARNING="-Wall -Wconversion"
    LDFLAGS_DEBUG=-g
    LDFLAGS_OPTIMIZE=-O
    PATHTYPE=-u

    # Specify the CC output file names based on the target name
    CC_OBJNAME="-o \$@"
    CC_EXENAME="-o \$@"
else
    SHLIB_LD="link -dll -nologo"
    SHLIB_LD_LIBS="user32.lib advapi32.lib"
    LIBS="user32.lib advapi32.lib"
    AR="lib -nologo"
    MAKE_LIB="\${AR} -out:\$@"
    MAKE_EXE="\${CC} -Fe\$@"

    echo "TCL_SHARED_BUILD=${TCL_SHARED_BUILD}"
    if test "${TCL_SHARED_BUILD}" = "0" ; then
	# static
	runtime=-MT
	MAKE_DLL="echo "
	LIBSUFFIX="s\${TCL_DBGX}.lib"
	LIBRARIES="\${STATIC_LIBRARIES}"
	EXESUFFIX="s\${TCL_DBGX}.exe"
	DLLSUFFIX=""
    else
	# dynamic
	runtime=-MD
	MAKE_DLL="\${SHLIB_LD} \${SHLIB_LD_LIBS} -out:\$@"
	LIBSUFFIX="\${TCL_DBGX}.lib"
	DLLSUFFIX="\${TCL_DBGX}.dll"
	EXESUFFIX="\${TCL_DBGX}.exe"
	LIBRARIES="\${SHARED_LIBRARIES}"
    fi

    EXTRA_CFLAGS="-YX -nologo"
    CFLAGS_DEBUG="-Z7 -Od -WX ${runtime}d"
    CFLAGS_OPTIMIZE="-O2 -Gs -GD ${runtime}"
    CFLAGS_WARNING="-W3"
    LDFLAGS_DEBUG="-debug"
    LDFLAGS_OPTIMIZE="-release"
    PATHTYPE=-w

    # Specify the CC output file names based on the target name
    CC_OBJNAME="-Fo\$@"
    CC_EXENAME="-Fe\$@"
fi

eval "LD_FLAGS=${LD_FLAGS}"

AC_SUBST(PATHTYPE)
AC_SUBST(CFLAGS_DEBUG)
AC_SUBST(CFLAGS_OPTIMIZE)
AC_SUBST(CFLAGS_WARNING)
AC_SUBST(EXTRA_CFLAGS)
AC_SUBST(TCL_DBGX)
AC_SUBST(TCL_LIB_FILE)
AC_SUBST(TCL_MAJOR_VERSION)
AC_SUBST(TCL_MINOR_VERSION)
AC_SUBST(TCL_PATCH_LEVEL)
AC_SUBST(TCL_VERSION)
AC_SUBST(SHLIB_LD)
AC_SUBST(SHLIB_LD_LIBS)
AC_SUBST(SHLIB_CFLAGS)
AC_SUBST(SHLIB_SUFFIX)
AC_SUBST(CC_OBJNAME)
AC_SUBST(CC_EXENAME)
AC_SUBST(AR)
AC_SUBST(DLLSUFFIX)
AC_SUBST(LIBSUFFIX)
AC_SUBST(EXESUFFIX)
AC_SUBST(LIBRARIES)
AC_SUBST(MAKE_LIB)
AC_SUBST(MAKE_DLL)

AC_OUTPUT(Makefile)
